import 'dart:math';

/// Data model for Halloween-themed prompt elements
class HalloweenPromptData {
  static final Random _random = Random();

  // SETTING options from the screenshot
  static const List<String> settings = [
    'haunted forest with mist and shadows',
    'spooky graveyard with broken tombstones',
    'eerie haunted room with vintage furniture',
    'pumpkin field glowing under the full moon',
    'ghostly corridor with flickering candles',
  ];

  // LIGHTING options from the screenshot
  static const List<String> lighting = [
    'neon orange and purple cinematic lighting',
    'candle-lit warm glow with creepy shadows',
    'cold blue moonlight with foggy atmosphere',
    'green spectral glow with mystical highlights',
  ];

  // EFFECTS options from the screenshot
  static const List<String> effects = [
    'holographic brush strokes and glitch pixel effects to emphasize AI generation',
    'shattered fragments of light forming shapes as if generated by AI',
    'floating digital particles swirling around the scene',
    'neural network patterns faintly glowing in the background',
  ];

  /// Gets a random setting from the settings list
  static String getRandomSetting() {
    return settings[_random.nextInt(settings.length)];
  }

  /// Gets a random lighting from the lighting list
  static String getRandomLighting() {
    return lighting[_random.nextInt(lighting.length)];
  }

  /// Gets a random effect from the effects list
  static String getRandomEffect() {
    return effects[_random.nextInt(effects.length)];
  }

  /// Gets all random elements at once
  static Map<String, String> getRandomElements() {
    return {
      'setting': getRandomSetting(),
      'lighting': getRandomLighting(),
      'effect': getRandomEffect(),
    };
  }

  /// Gets a specific setting by index
  static String getSetting(int index) {
    return settings[index.clamp(0, settings.length - 1)];
  }

  /// Gets a specific lighting by index
  static String getLighting(int index) {
    return lighting[index.clamp(0, lighting.length - 1)];
  }

  /// Gets a specific effect by index
  static String getEffect(int index) {
    return effects[index.clamp(0, effects.length - 1)];
  }

  /// Gets all available options
  static Map<String, List<String>> getAllOptions() {
    return {'settings': settings, 'lighting': lighting, 'effects': effects};
  }
}
